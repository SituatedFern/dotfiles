/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = require('./common')(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};

// SIG // Begin signature block
// SIG // MIIjpQYJKoZIhvcNAQcCoIIjljCCI5ICAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // nb7PYyE3e8eBOsFHc8IeyvrMBeI7rVhGPR/js3GME8Cg
// SIG // gg2WMIIGFDCCA/ygAwIBAgITMwAAAkNVsbk2MwXnzgAA
// SIG // AAACQzANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIxMDgxMjE3MzgzNFoX
// SIG // DTIyMDkxNTE3MzgzNFowgYgxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xMjAwBgNVBAMTKU1pY3Jvc29mdCAzcmQgUGFydHkg
// SIG // QXBwbGljYXRpb24gQ29tcG9uZW50MIIBIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2BwjeXSQdxF6x8F
// SIG // 1GWoEvK4ztmQe1eLQs9GDzilmb9Sgt3qFCifIS5EKiDg
// SIG // zHtqKbAyLcsNDSz/TceaKy+HyqMalJhIVmWwxdZ0Fed3
// SIG // M69bBiBwK+gtWBitqhZIjzZSs+Oovp1hrsxJLygh7XML
// SIG // 5DiCdgpDC7OTf6npJ+rF6QrTSaYMMSBKHfnbj+xkcAfh
// SIG // yqhTxU6z1UOq7ERa4Bmuscxnegyudy4MPAeTbde6QD50
// SIG // QiLQkD0T7iYhy2JARvc1TOhnG92zn4x085S948D3MbMk
// SIG // aOQNHLvcJGGTsjv4d1NUhhtvWYYlkykxTXMQLVtz0XZX
// SIG // oN4iJ5S+lLJeUHDwCQIDAQABo4IBfjCCAXowHwYDVR0l
// SIG // BBgwFgYKKwYBBAGCN0wRAQYIKwYBBQUHAwMwHQYDVR0O
// SIG // BBYEFOqaLrRdpqfTP5zrgAiy+2S3xx1FMFAGA1UdEQRJ
// SIG // MEekRTBDMSkwJwYDVQQLEyBNaWNyb3NvZnQgT3BlcmF0
// SIG // aW9ucyBQdWVydG8gUmljbzEWMBQGA1UEBRMNMjMxNTIy
// SIG // KzQ2NjQxMjAfBgNVHSMEGDAWgBRIbmTlUAXTgqoXNzci
// SIG // tW2oynUClTBUBgNVHR8ETTBLMEmgR6BFhkNodHRwOi8v
// SIG // d3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NybC9NaWND
// SIG // b2RTaWdQQ0EyMDExXzIwMTEtMDctMDguY3JsMGEGCCsG
// SIG // AQUFBwEBBFUwUzBRBggrBgEFBQcwAoZFaHR0cDovL3d3
// SIG // dy5taWNyb3NvZnQuY29tL3BraW9wcy9jZXJ0cy9NaWND
// SIG // b2RTaWdQQ0EyMDExXzIwMTEtMDctMDguY3J0MAwGA1Ud
// SIG // EwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggIBAEfTGT+m
// SIG // Q+BEs2cxilP1tH5emLonNAFlif4s/5TVgOt6wAODVMpW
// SIG // wyGdSRZyMK4Z1OWsR5h2y/qEsFSyk1sPqLw4+ZkaLnEy
// SIG // +taAEbT/0EDHaOuJa2XP6vMXhPQPCxJpAz7IzWyCzW1F
// SIG // EUy5fN5TlWp2MKLdrSkbV7euXoa+uftZDk3fFlrKIewQ
// SIG // yriRPgrRuqJcKd5U5oq4FLDUzAldvwiIdhO7jdwVI3ct
// SIG // jSkh4VuS+mytysrL3Ok1u5NN4Mt0OlYcGpNbNibLljwx
// SIG // RPNwOaolrrGNcNLxXC7bQWnOQlJtcbmh82NJn31f4uH1
// SIG // TK6EmJej82BdbPsxLDZkaCMouLW37HPm0R1refE2u4H4
// SIG // lBnBiIza/NY8yPYTDWwt1N1sQ7o8uh2PmoW2LOOhLWvO
// SIG // Hm7YtbuIe/RDAmQljocDtlxyVMMDY19fiVRJban/tLgm
// SIG // qUnoWJ/oujew++p5nr64QQPtZhm5khRkJqht+FtPVMPb
// SIG // qjlGvcTL73xMs9v2UYSQTWgoZJMJVpcY+wikePYY1cHq
// SIG // 7T5Io7p65f5T4a8knxPOCrrNYaCg0hash4QgnB7f7c8W
// SIG // rNyGhA2FJtHYNmDEnjQBejkauoGrm0xl8DmNRbCK9dRN
// SIG // cPptaJc3sLsLRqu3Q36Wz7vzWYZWCPod87Q0mZByox01
// SIG // Jrluh/j0EpvL9vPKMIIHejCCBWKgAwIBAgIKYQ6Q0gAA
// SIG // AAAAAzANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMC
// SIG // VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcT
// SIG // B1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
// SIG // b3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3Qg
// SIG // Q2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTEwHhcNMTEw
// SIG // NzA4MjA1OTA5WhcNMjYwNzA4MjEwOTA5WjB+MQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQg
// SIG // Q29kZSBTaWduaW5nIFBDQSAyMDExMIICIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAg8AMIICCgKCAgEAq/D6chAcLq3YbqqC
// SIG // EE00uvK2WCGfQhsqa+laUKq4BjgaBEm6f8MMHt03a8YS
// SIG // 2AvwOMKZBrDIOdUBFDFC04kNeWSHfpRgJGyvnkmc6Whe
// SIG // 0t+bU7IKLMOv2akrrnoJr9eWWcpgGgXpZnboMlImEi/n
// SIG // qwhQz7NEt13YxC4Ddato88tt8zpcoRb0RrrgOGSsbmQ1
// SIG // eKagYw8t00CT+OPeBw3VXHmlSSnnDb6gE3e+lD3v++Mr
// SIG // WhAfTVYoonpy4BI6t0le2O3tQ5GD2Xuye4Yb2T6xjF3o
// SIG // iU+EGvKhL1nkkDstrjNYxbc+/jLTswM9sbKvkjh+0p2A
// SIG // LPVOVpEhNSXDOW5kf1O6nA+tGSOEy/S6A4aN91/w0FK/
// SIG // jJSHvMAhdCVfGCi2zCcoOCWYOUo2z3yxkq4cI6epZuxh
// SIG // H2rhKEmdX4jiJV3TIUs+UsS1Vz8kA/DRelsv1SPjcF0P
// SIG // UUZ3s/gA4bysAoJf28AVs70b1FVL5zmhD+kjSbwYuER8
// SIG // ReTBw3J64HLnJN+/RpnF78IcV9uDjexNSTCnq47f7Fuf
// SIG // r/zdsGbiwZeBe+3W7UvnSSmnEyimp31ngOaKYnhfsi+E
// SIG // 11ecXL93KCjx7W3DKI8sj0A3T8HhhUSJxAlMxdSlQy90
// SIG // lfdu+HggWCwTXWCVmj5PM4TasIgX3p5O9JawvEagbJjS
// SIG // 4NaIjAsCAwEAAaOCAe0wggHpMBAGCSsGAQQBgjcVAQQD
// SIG // AgEAMB0GA1UdDgQWBBRIbmTlUAXTgqoXNzcitW2oynUC
// SIG // lTAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTALBgNV
// SIG // HQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSME
// SIG // GDAWgBRyLToCMZBDuRQFTuHqp8cx0SOJNDBaBgNVHR8E
// SIG // UzBRME+gTaBLhklodHRwOi8vY3JsLm1pY3Jvc29mdC5j
// SIG // b20vcGtpL2NybC9wcm9kdWN0cy9NaWNSb29DZXJBdXQy
// SIG // MDExXzIwMTFfMDNfMjIuY3JsMF4GCCsGAQUFBwEBBFIw
// SIG // UDBOBggrBgEFBQcwAoZCaHR0cDovL3d3dy5taWNyb3Nv
// SIG // ZnQuY29tL3BraS9jZXJ0cy9NaWNSb29DZXJBdXQyMDEx
// SIG // XzIwMTFfMDNfMjIuY3J0MIGfBgNVHSAEgZcwgZQwgZEG
// SIG // CSsGAQQBgjcuAzCBgzA/BggrBgEFBQcCARYzaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9kb2NzL3By
// SIG // aW1hcnljcHMuaHRtMEAGCCsGAQUFBwICMDQeMiAdAEwA
// SIG // ZQBnAGEAbABfAHAAbwBsAGkAYwB5AF8AcwB0AGEAdABl
// SIG // AG0AZQBuAHQALiAdMA0GCSqGSIb3DQEBCwUAA4ICAQBn
// SIG // 8oalmOBUeRou09h0ZyKbC5YR4WOSmUKWfdJ5DJDBZV8u
// SIG // LD74w3LRbYP+vj/oCso7v0epo/Np22O/IjWll11lhJB9
// SIG // i0ZQVdgMknzSGksc8zxCi1LQsP1r4z4HLimb5j0bpdS1
// SIG // HXeUOeLpZMlEPXh6I/MTfaaQdION9MsmAkYqwooQu6Sp
// SIG // BQyb7Wj6aC6VoCo/KmtYSWMfCWluWpiW5IP0wI/zRive
// SIG // /DvQvTXvbiWu5a8n7dDd8w6vmSiXmE0OPQvyCInWH8My
// SIG // GOLwxS3OW560STkKxgrCxq2u5bLZ2xWIUUVYODJxJxp/
// SIG // sfQn+N4sOiBpmLJZiWhub6e3dMNABQamASooPoI/E01m
// SIG // C8CzTfXhj38cbxV9Rad25UAqZaPDXVJihsMdYzaXht/a
// SIG // 8/jyFqGaJ+HNpZfQ7l1jQeNbB5yHPgZ3BtEGsXUfFL5h
// SIG // YbXw3MYbBL7fQccOKO7eZS/sl/ahXJbYANahRr1Z85el
// SIG // CUtIEJmAH9AAKcWxm6U/RXceNcbSoqKfenoi+kiVH6v7
// SIG // RyOA9Z74v2u3S5fi63V4GuzqN5l5GEv/1rMjaHXmr/r8
// SIG // i+sLgOppO6/8MO0ETI7f33VtY5E90Z1WTk+/gFcioXgR
// SIG // MiF670EKsT/7qMykXcGhiJtXcVZOSEXAQsmbdlsKgEhr
// SIG // /Xmfwb1tbWrJUnMTDXpQzTGCFWcwghVjAgEBMIGVMH4x
// SIG // CzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9u
// SIG // MRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNy
// SIG // b3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jv
// SIG // c29mdCBDb2RlIFNpZ25pbmcgUENBIDIwMTECEzMAAAJD
// SIG // VbG5NjMF584AAAAAAkMwDQYJYIZIAWUDBAIBBQCgga4w
// SIG // GQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYB
// SIG // BAGCNwIBCzEOMAwGCisGAQQBgjcCARUwLwYJKoZIhvcN
// SIG // AQkEMSIEIIZ12zJJV8tuwNPkSzUGPkx9nHZVQxPF9uvj
// SIG // 1wt37meRMEIGCisGAQQBgjcCAQwxNDAyoBSAEgBNAGkA
// SIG // YwByAG8AcwBvAGYAdKEagBhodHRwOi8vd3d3Lm1pY3Jv
// SIG // c29mdC5jb20wDQYJKoZIhvcNAQEBBQAEggEArcqXljC3
// SIG // snF9EcJ3pj7BbkidZkqk1fwbnY+/ewGSrAmnZKfR4HNM
// SIG // xvfvnU3RvJczTHbyiijAjIMaMdLXuNDqKKwLVvB0AX16
// SIG // i5PF5LhinUoU6v33lkoZcYqkooWG7mLephACsVIgHu17
// SIG // 3JCq+lGKd/YjuSP1JX+2IH9OLs38kkzwELTwLM8Ybx+M
// SIG // 3igbOA5P50Qgh0IHG/qv1w3p5H3mAkWTlDfG64pHzD5o
// SIG // BbV7RU9BBUuDfZa2Si8WIiF1HQGLw2T6du3w5JSbytX1
// SIG // BxW1ReF4UWv8K8fCUEuvyOI5NTHdy9uRxDmyjYBg5o2q
// SIG // i5R5tlYFkxZyH7+f2G9s9yGmrKGCEvEwghLtBgorBgEE
// SIG // AYI3AwMBMYIS3TCCEtkGCSqGSIb3DQEHAqCCEsowghLG
// SIG // AgEDMQ8wDQYJYIZIAWUDBAIBBQAwggFVBgsqhkiG9w0B
// SIG // CRABBKCCAUQEggFAMIIBPAIBAQYKKwYBBAGEWQoDATAx
// SIG // MA0GCWCGSAFlAwQCAQUABCCyjdhHeISz3Aw49LojT4gx
// SIG // AKifspEDEuoqqhJVFs81ZwIGYfw8OuqeGBMyMDIyMDIx
// SIG // MTAxNTc0My41NjFaMASAAgH0oIHUpIHRMIHOMQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMSkwJwYDVQQLEyBNaWNyb3NvZnQg
// SIG // T3BlcmF0aW9ucyBQdWVydG8gUmljbzEmMCQGA1UECxMd
// SIG // VGhhbGVzIFRTUyBFU046Nzg4MC1FMzkwLTgwMTQxJTAj
// SIG // BgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZp
// SIG // Y2Wggg5EMIIE9TCCA92gAwIBAgITMwAAAVyG0uPsOfaL
// SIG // OAAAAAABXDANBgkqhkiG9w0BAQsFADB8MQswCQYDVQQG
// SIG // EwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UE
// SIG // BxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENv
// SIG // cnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGlt
// SIG // ZS1TdGFtcCBQQ0EgMjAxMDAeFw0yMTAxMTQxOTAyMTda
// SIG // Fw0yMjA0MTExOTAyMTdaMIHOMQswCQYDVQQGEwJVUzET
// SIG // MBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk
// SIG // bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0
// SIG // aW9uMSkwJwYDVQQLEyBNaWNyb3NvZnQgT3BlcmF0aW9u
// SIG // cyBQdWVydG8gUmljbzEmMCQGA1UECxMdVGhhbGVzIFRT
// SIG // UyBFU046Nzg4MC1FMzkwLTgwMTQxJTAjBgNVBAMTHE1p
// SIG // Y3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2UwggEiMA0G
// SIG // CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDQKis+ryof
// SIG // YkCyaBLyXAlMHeX52rcEF5iGTJSfOL+J7DLn53yWxutt
// SIG // 3/1PDgbtbMjlzme1cxzngv/qyGa83CUGkPK+ZQkI5/X4
// SIG // ht45Pqaj0hUZd8PWBhY6LsvxcbkgOrPzL+29BktG2h05
// SIG // SRYEbgygYAbE2oBkeEkZh5xXa0oU97ZNU91gEi0xiEnh
// SIG // hseItA8g7s/M0FZqaS/PgVMoj4q9Fv12TrLgOhRMY94E
// SIG // 78ky34g1YZjXMMz7+S0JayFYq9Jtvu1A02PIp8x5f9gp
// SIG // R+DeNrqm1pPR9iOK6QgnFFkgcNZvA3uIU7ExkBE+6okf
// SIG // hXyOz0JSUPvXn+wDQH5T0jYbAgMBAAGjggEbMIIBFzAd
// SIG // BgNVHQ4EFgQUX/MUrDkocoCQBX+4mnstYxjBuj4wHwYD
// SIG // VR0jBBgwFoAU1WM6XIoxkPNDe3xGG8UzaFqFbVUwVgYD
// SIG // VR0fBE8wTTBLoEmgR4ZFaHR0cDovL2NybC5taWNyb3Nv
// SIG // ZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljVGltU3Rh
// SIG // UENBXzIwMTAtMDctMDEuY3JsMFoGCCsGAQUFBwEBBE4w
// SIG // TDBKBggrBgEFBQcwAoY+aHR0cDovL3d3dy5taWNyb3Nv
// SIG // ZnQuY29tL3BraS9jZXJ0cy9NaWNUaW1TdGFQQ0FfMjAx
// SIG // MC0wNy0wMS5jcnQwDAYDVR0TAQH/BAIwADATBgNVHSUE
// SIG // DDAKBggrBgEFBQcDCDANBgkqhkiG9w0BAQsFAAOCAQEA
// SIG // eHlM9td+IHMOHCP1Mtnto5Du7XqSu0+Vl7e+mvwM/6XT
// SIG // QjegdQ+kGEURy/dCZhpWTHVLcBvwOhPUajag7/Wh0PP9
// SIG // hSxXK6zTk4A0NHI2f/TMfLLaNe5OK1ttkL02DkAQdeKL
// SIG // jQLA5aGfWqnP0LZovCRR3ejHO7xOaA4HlRpt8vHq+1IC
// SIG // 5+IJEyGJ/JXkz2PR9srqC3120PF65dFlhQW5mZurdwxB
// SIG // vq+q2iJjSez6wUB56XV8Qo4xeVjTzGDXihFgPkZMgORQ
// SIG // +WANLil7ZTXeR4L8HFqPwAhsrj5bscGAXAwmUBRWraL9
// SIG // LjYzrEMRDEYAM6QOb6hDjsf01BGBZHEQSTCCBnEwggRZ
// SIG // oAMCAQICCmEJgSoAAAAAAAIwDQYJKoZIhvcNAQELBQAw
// SIG // gYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5n
// SIG // dG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN
// SIG // aWNyb3NvZnQgQ29ycG9yYXRpb24xMjAwBgNVBAMTKU1p
// SIG // Y3Jvc29mdCBSb290IENlcnRpZmljYXRlIEF1dGhvcml0
// SIG // eSAyMDEwMB4XDTEwMDcwMTIxMzY1NVoXDTI1MDcwMTIx
// SIG // NDY1NVowfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldh
// SIG // c2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNV
// SIG // BAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UE
// SIG // AxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAw
// SIG // ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCp
// SIG // HQ28dxGKOiDs/BOX9fp/aZRrdFQQ1aUKAIKF++18aEss
// SIG // X8XD5WHCdrc+Zitb8BVTJwQxH0EbGpUdzgkTjnxhMFmx
// SIG // MEQP8WCIhFRDDNdNuDgIs0Ldk6zWczBXJoKjRQ3Q6vVH
// SIG // gc2/JGAyWGBG8lhHhjKEHnRhZ5FfgVSxz5NMksHEpl3R
// SIG // YRNuKMYa+YaAu99h/EbBJx0kZxJyGiGKr0tkiVBisV39
// SIG // dx898Fd1rL2KQk1AUdEPnAY+Z3/1ZsADlkR+79BL/W7l
// SIG // msqxqPJ6Kgox8NpOBpG2iAg16HgcsOmZzTznL0S6p/Tc
// SIG // ZL2kAcEgCZN4zfy8wMlEXV4WnAEFTyJNAgMBAAGjggHm
// SIG // MIIB4jAQBgkrBgEEAYI3FQEEAwIBADAdBgNVHQ4EFgQU
// SIG // 1WM6XIoxkPNDe3xGG8UzaFqFbVUwGQYJKwYBBAGCNxQC
// SIG // BAweCgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1Ud
// SIG // EwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAU1fZWy4/oolxi
// SIG // aNE9lJBb186aGMQwVgYDVR0fBE8wTTBLoEmgR4ZFaHR0
// SIG // cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJv
// SIG // ZHVjdHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3Js
// SIG // MFoGCCsGAQUFBwEBBE4wTDBKBggrBgEFBQcwAoY+aHR0
// SIG // cDovL3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9N
// SIG // aWNSb29DZXJBdXRfMjAxMC0wNi0yMy5jcnQwgaAGA1Ud
// SIG // IAEB/wSBlTCBkjCBjwYJKwYBBAGCNy4DMIGBMD0GCCsG
// SIG // AQUFBwIBFjFodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20v
// SIG // UEtJL2RvY3MvQ1BTL2RlZmF1bHQuaHRtMEAGCCsGAQUF
// SIG // BwICMDQeMiAdAEwAZQBnAGEAbABfAFAAbwBsAGkAYwB5
// SIG // AF8AUwB0AGEAdABlAG0AZQBuAHQALiAdMA0GCSqGSIb3
// SIG // DQEBCwUAA4ICAQAH5ohRDeLG4Jg/gXEDPZ2joSFvs+um
// SIG // zPUxvs8F4qn++ldtGTCzwsVmyWrf9efweL3HqJ4l4/m8
// SIG // 7WtUVwgrUYJEEvu5U4zM9GASinbMQEBBm9xcF/9c+V4X
// SIG // NZgkVkt070IQyK+/f8Z/8jd9Wj8c8pl5SpFSAK84Dxf1
// SIG // L3mBZdmptWvkx872ynoAb0swRCQiPM/tA6WWj1kpvLb9
// SIG // BOFwnzJKJ/1Vry/+tuWOM7tiX5rbV0Dp8c6ZZpCM/2pi
// SIG // f93FSguRJuI57BlKcWOdeyFtw5yjojz6f32WapB4pm3S
// SIG // 4Zz5Hfw42JT0xqUKloakvZ4argRCg7i1gJsiOCC1JeVk
// SIG // 7Pf0v35jWSUPei45V3aicaoGig+JFrphpxHLmtgOR5qA
// SIG // xdDNp9DvfYPw4TtxCd9ddJgiCGHasFAeb73x4QDf5zEH
// SIG // pJM692VHeOj4qEir995yfmFrb3epgcunCaw5u+zGy9iC
// SIG // tHLNHfS4hQEegPsbiSpUObJb2sgNVZl6h3M7COaYLeqN
// SIG // 4DMuEin1wC9UJyH3yKxO2ii4sanblrKnQqLJzxlBTeCG
// SIG // +SqaoxFmMNO7dDJL32N79ZmKLxvHIa9Zta7cRDyXUHHX
// SIG // odLFVeNp3lfB0d4wwP3M5k37Db9dT+mdHhk4L7zPWAUu
// SIG // 7w2gUDXa7wknHNWzfjUeCLraNtvTX4/edIhJEqGCAtIw
// SIG // ggI7AgEBMIH8oYHUpIHRMIHOMQswCQYDVQQGEwJVUzET
// SIG // MBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk
// SIG // bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0
// SIG // aW9uMSkwJwYDVQQLEyBNaWNyb3NvZnQgT3BlcmF0aW9u
// SIG // cyBQdWVydG8gUmljbzEmMCQGA1UECxMdVGhhbGVzIFRT
// SIG // UyBFU046Nzg4MC1FMzkwLTgwMTQxJTAjBgNVBAMTHE1p
// SIG // Y3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2WiIwoBATAH
// SIG // BgUrDgMCGgMVAJ7ipaPGnyhHlZx+Xesj+J5OafBMoIGD
// SIG // MIGApH4wfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldh
// SIG // c2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNV
// SIG // BAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UE
// SIG // AxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAw
// SIG // DQYJKoZIhvcNAQEFBQACBQDlr/UAMCIYDzIwMjIwMjEx
// SIG // MDAzMzA0WhgPMjAyMjAyMTIwMDMzMDRaMHcwPQYKKwYB
// SIG // BAGEWQoEATEvMC0wCgIFAOWv9QACAQAwCgIBAAICGjUC
// SIG // Af8wBwIBAAICEkAwCgIFAOWxRoACAQAwNgYKKwYBBAGE
// SIG // WQoEAjEoMCYwDAYKKwYBBAGEWQoDAqAKMAgCAQACAweh
// SIG // IKEKMAgCAQACAwGGoDANBgkqhkiG9w0BAQUFAAOBgQCv
// SIG // K99boT6bYrV5BILv5+bSwq/wJTrND5kvEyMssbucncGZ
// SIG // cMegIJRkBO54mU61mXsWiMAFdQ4kxs7C24DHueLKTfJu
// SIG // jucHVKYIxmVHBWaO7RPdfNjq3iOk6yIx9vMGYLbszg8s
// SIG // pMc5Kj9IRnpx8TrwkEErP1JdrXmvyuaesN5z/DGCAw0w
// SIG // ggMJAgEBMIGTMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQI
// SIG // EwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4w
// SIG // HAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAk
// SIG // BgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAy
// SIG // MDEwAhMzAAABXIbS4+w59os4AAAAAAFcMA0GCWCGSAFl
// SIG // AwQCAQUAoIIBSjAaBgkqhkiG9w0BCQMxDQYLKoZIhvcN
// SIG // AQkQAQQwLwYJKoZIhvcNAQkEMSIEIFLKUvP7zx7fTi/b
// SIG // qe9f4W29oj6WZxwBuBonqy9RJ8tHMIH6BgsqhkiG9w0B
// SIG // CRACLzGB6jCB5zCB5DCBvQQgTy1kV8IgT2wAMEnMpCAr
// SIG // UD30LiCIRm8V77RcjwwZ5rUwgZgwgYCkfjB8MQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQg
// SIG // VGltZS1TdGFtcCBQQ0EgMjAxMAITMwAAAVyG0uPsOfaL
// SIG // OAAAAAABXDAiBCDbRDd6H+YFTx7oz3Pw8YEPbwdaMjmV
// SIG // IUqFNmKX0DojgTANBgkqhkiG9w0BAQsFAASCAQAbWD8V
// SIG // ggbsZSfmkGBmME8GVL0NE9QWzcJmoJulRA3V9Lw/GsaT
// SIG // IBVbz5eIzy6ORFxVeDiG5VOeiUR332uiJ7gILX7t3wdY
// SIG // rjmvY9UWUkyz8Y45HjLHVw08x++PjheVwdj2QbzcrFVr
// SIG // bGmDZ73WZmSstqzaU2LoB+GehNLzRlufvpNZkTyYRGkY
// SIG // T/oSdzC6PU3bVLudoliv8JbDY/toQ7zD3V0UWeSqu4VR
// SIG // 8t3UnUSIs5r6RA+dyTxGyW3CfgVu3Ppg3U0qD04g7ajX
// SIG // kB88yfR0ueoftWWbiHKP7wZyG8fTNtflmj9orGApdU0f
// SIG // hmHDPMuoLVMLX1ISwkZkcXig0pJh
// SIG // End signature block
